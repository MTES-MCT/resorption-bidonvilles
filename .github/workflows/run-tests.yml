name: "run-cypress-test"

concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

on: [workflow_dispatch, push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      # clone repositories
      - name: "Clone resorption-bidonvilles"
        uses: actions/checkout@v2
        with:
          path: resorption-bidonvilles
          fetch-depth: "0"

      - name: "Clone resorption-bidonvilles-deploy"
        uses: actions/checkout@v2
        with:
          repository: MTES-MCT/resorption-bidonvilles-deploy
          path: resorption-bidonvilles-deploy

      # create .env file for deploy
      - name : "Create .env file for resorption-bidonvilles-deploy"
        working-directory: ./resorption-bidonvilles-deploy/config
        run: cp ./.env.ci.sample ./.env

      # declare local hosts
      - name: "Write local hosts in /etc/hosts"
        run: |
          sudo echo "127.0.0.1 resorption-bidonvilles.localhost" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 api.resorption-bidonvilles.localhost" | sudo tee -a /etc/hosts

      # generate ssl certificate
      - name: "Generate SSL certificate"
        working-directory: ./resorption-bidonvilles-deploy
        run: make localcert

      # install npm modules
      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: "Get yarn cache"
        run: echo "::set-output name=dir::$(yarn cache dir)"
        id: yarn-cache
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "Install root NPM dependencies"
        working-directory: ./resorption-bidonvilles
        run: yarn install --frozen-lockfile --check-files
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: "Install package NPM dependencies"
        working-directory: ./resorption-bidonvilles
        run: yarn lerna bootstrap

      # start docker services
      - name: "Start docker services"
        working-directory: ./resorption-bidonvilles-deploy
        run: make dev "up -d"
        continue-on-error: true

      - name: "Wait for localhost"
        run: |
          timeout -s TERM 120 bash -c \
            'while [[ "$(curl -k -s -o /dev/null -L -w ''%{http_code}'' ${0})" != "200" ]]; do\
                echo "ðŸ”¹ Next ping in 5 seconds";\
                sleep 5;\
            done' "https://resorption-bidonvilles.localhost"

      # build and fill database
      - name: "Generate database structure"
        working-directory: ./resorption-bidonvilles-deploy
        run: make dev-exec rb_api "yarn sequelize db:migrate"
        continue-on-error: true

      - name: "Insert test data"
        working-directory: ./resorption-bidonvilles-deploy
        run: make dev-exec rb_api "yarn sequelize db:seed --seed 000001-users.js"
        continue-on-error: true

      # run tests, at last
      - name: "Run cypress tests"
        working-directory: ./resorption-bidonvilles/packages/frontend
        run: yarn test

      - name: "Run frontend unit tests"
        working-directory: ./resorption-bidonvilles/packages/frontend
        run: yarn test:unit

      - name: "Run apu unit tests"
        working-directory: ./resorption-bidonvilles/packages/api
        run: yarn test