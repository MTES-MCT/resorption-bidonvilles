###
# BUILD STAGE
###
FROM node:20-alpine AS build
ENV NODE_ENV=production

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# python3, make, and g++ are needed for building node-gyp (itself required by a bunch of our dependencies)
RUN apk update && apk add --no-cache python3 make g++ libc6-compat

# Activer Corepack pour utiliser la bonne version de Yarn
RUN corepack enable

RUN mkdir -p \
    /home/node/app/ \
    /home/node/app/packages/api \
    /home/node/app/packages/frontend/common \
    && chown -R node:node /home/node/app/
USER node

WORKDIR /home/node/app/
COPY --chown=node:node packages/api/package.json packages/api/.sequelizerc ./packages/api/
COPY --chown=node:node package.json yarn.lock .yarnrc.yml ./
COPY --chown=node:node .yarn ./.yarn/

RUN yarn install --silent && yarn cache clean

ADD ./packages/api ./packages/api/
ADD --chown=node:node ./packages/frontend/common ./packages/frontend/common/

WORKDIR /home/node/app/packages/api/
RUN yarn build

###
# PRODUCTION STAGE
###
FROM node:20-alpine AS production
ENV NODE_ENV=production

# Installer les dépendances système nécessaires pour l'exécution
RUN apk add --no-cache vips

# Installer PM2 globalement pour la gestion des processus (en tant que root)
RUN yarn global add pm2

# Préparer le répertoire de l'application
RUN mkdir -p /home/node/app/packages/api && chown -R node:node /home/node/app
USER node
WORKDIR /home/node/app/packages/api

# Copier les fichiers package.json et installer les dépendances
COPY --chown=node:node packages/api/package.json ./
RUN yarn install --production --non-interactive --ignore-scripts --ignore-peer-dependencies

# Copier les fichiers compilés depuis l'étape de build
COPY --from=build --chown=node:node /home/node/app/packages/api/dist ./dist

# Créer un fichier de configuration PM2
RUN echo "module.exports = {" > ecosystem.config.js
RUN echo "  apps: [" >> ecosystem.config.js
RUN echo "    {" >> ecosystem.config.js
RUN echo "      name: 'api'," >> ecosystem.config.js
RUN echo "      script: 'dist/api/server/index.js'," >> ecosystem.config.js
RUN echo "      instances: 1," >> ecosystem.config.js
RUN echo "      exec_mode: 'fork'," >> ecosystem.config.js
RUN echo "      watch: false," >> ecosystem.config.js
RUN echo "      env: {" >> ecosystem.config.js
RUN echo "        NODE_ENV: 'production'" >> ecosystem.config.js
RUN echo "      }" >> ecosystem.config.js
RUN echo "    }" >> ecosystem.config.js
RUN echo "  ]" >> ecosystem.config.js
RUN echo "};" >> ecosystem.config.js

# Définir la commande de démarrage avec PM2
CMD ["pm2-runtime", "ecosystem.config.js"]