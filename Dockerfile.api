###
# BUILD STAGE
###
FROM node:22-alpine AS build

# Activer Corepack pour utiliser la bonne version de Yarn
RUN corepack enable
ENV NODE_ENV=production

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# python3, make, and g++ are needed for building node-gyp (itself required by a bunch of our dependencies)
# Installer les dépendances système requises pour la compilation (notamment pour sharp)
RUN apk update && apk add --no-cache build-base py3-setuptools libc6-compat vips-dev fftw-dev vips

# Create directory structure for all workspaces to ensure all package.json files can be copied
RUN mkdir -p \
    /home/node/app/packages/api \
    /home/node/app/packages/frontend/ui \
    /home/node/app/packages/frontend/webapp \
    /home/node/app/packages/frontend/www \
    && chown -R node:node /home/node/app/
USER node

WORKDIR /home/node/app/

# Copy all manifests to enable a correct and immutable install
COPY --chown=node:node package.json yarn.lock .yarnrc.yml ./
COPY --chown=node:node .yarn ./.yarn/
COPY --chown=node:node packages/api/package.json packages/api/.sequelizerc ./packages/api/
COPY --chown=node:node packages/frontend/ui/package.json ./packages/frontend/ui/
COPY --chown=node:node packages/frontend/webapp/package.json ./packages/frontend/webapp/
COPY --chown=node:node packages/frontend/www/package.json ./packages/frontend/www/

RUN yarn install --immutable && yarn cache clean

ADD ./packages/api ./packages/api/
ADD --chown=node:node ./packages/frontend/common ./packages/frontend/common/

WORKDIR /home/node/app/packages/api/
RUN yarn build

###
# PRODUCTION STAGE
###
FROM node:22-alpine AS production

# Activer Corepack pour utiliser la bonne version de Yarn
RUN corepack enable

# Installer les dépendances d'exécution pour sharp
RUN apk add --no-cache vips
ENV NODE_ENV=production

RUN mkdir -p \
    /home/node/app/ \
    && chown -R node:node /home/node/app/
USER node

WORKDIR /home/node/app/
COPY --chown=node:node package.json ./
COPY --from=build --chown=node:node /home/node/app/node_modules ./node_modules
COPY --from=build --chown=node:node /home/node/app/packages/api/dist ./packages/
COPY --chown=node:node packages/api/package.json ./packages/api/

WORKDIR /home/node/app/packages/api
ENTRYPOINT ["yarn", "serve"]