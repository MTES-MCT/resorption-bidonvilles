###
# BUILD STAGE
###
FROM node:22-alpine AS build
ENV NODE_ENV=production

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# python3, make, and g++ are needed for building node-gyp (itself required by a bunch of our dependencies)
RUN apk update && apk add --no-cache g++ libc6-compat make python3

# Activer Corepack pour utiliser la bonne version de Yarn
RUN corepack enable

RUN mkdir -p \
    /home/node/app/ \
    /home/node/app/packages/api \
    /home/node/app/packages/frontend/common \
    && chown -R node:node /home/node/app/
USER node

WORKDIR /home/node/app/
COPY --chown=node:node packages/api/package.json packages/api/.sequelizerc ./packages/api/
COPY --chown=node:node package.json yarn.lock .yarnrc.yml ./
COPY --chown=node:node .yarn ./.yarn/

RUN yarn install --silent && yarn cache clean

COPY ./packages/api ./packages/api/
COPY --chown=node:node ./packages/frontend/common ./packages/frontend/common/

WORKDIR /home/node/app/packages/api/
RUN yarn build

###
# PRODUCTION STAGE
###
FROM node:22-alpine AS production
ENV NODE_ENV=production

# Mettre à jour les paquets Alpine pour corriger les vulnérabilités connues
# Installer les dépendances système nécessaires pour l'exécution
RUN apk update && apk upgrade \
    && apk add --no-cache vips \
    && yarn global add pm2 \
    && mkdir -p /home/node/app/packages/api

# Copier les fichiers en tant que root
COPY packages/api/package.json /home/node/app/packages/api/
COPY --from=build /home/node/app/packages/api/dist /home/node/app/packages/api/dist

# Définir des permissions restrictives
RUN chown -R root:root /home/node/app && \
    chmod -R 755 /home/node/app && \
    chmod -R 550 /home/node/app/packages/api/dist && \
    chmod 440 /home/node/app/packages/api/package.json && \
    chown -R node:node /home/node/app/packages/api/dist

USER node
WORKDIR /home/node/app/packages/api

RUN yarn install --production --non-interactive --ignore-scripts --ignore-peer-dependencies \
  && echo "module.exports = {" > ecosystem.config.js \
  && echo "  apps: [" >> ecosystem.config.js \
  && echo "    {" >> ecosystem.config.js \
  && echo "      name: 'api'," >> ecosystem.config.js \
  && echo "      script: 'dist/api/server/index.js'," >> ecosystem.config.js \
  && echo "      instances: 1," >> ecosystem.config.js \
  && echo "      exec_mode: 'fork'," >> ecosystem.config.js \
  && echo "      watch: false," >> ecosystem.config.js \
  && echo "      env: {" >> ecosystem.config.js \
  && echo "        NODE_ENV: 'production'" >> ecosystem.config.js \
  && echo "      }" >> ecosystem.config.js \
  && echo "    }" >> ecosystem.config.js \
  && echo "  ]" >> ecosystem.config.js \
  && echo "};" >> ecosystem.config.js

CMD ["pm2-runtime", "ecosystem.config.js"]