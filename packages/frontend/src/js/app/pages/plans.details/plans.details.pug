<div class="v1">
    <div class="page--withMargin">
        <NavBar></NavBar>
        <div class="alert" v-if="closingAlertStatus !== 'hidden'">
            <div class="alert-wrapper" ref="wrapper">
                <header class="alert-header">
                    <hgroup>
                        <h1 class="alert-title">Confirmez-vous la fermeture du dispositif {{ plan.name }} ?</h1>
                    </hgroup>

                    <div class="alert-actionButtons">
                        <button class="button secondary" @click="setClosingAlertStatus('hidden')" :disabled="closingStatus === 'pending'">Annuler</button>
                        <button class="button" v-if="closingAlertStatus === 'step1'" @click="checkClosing">Suite</button>
                        <button class="button" v-if="closingAlertStatus === 'step2'" @click="close" :disabled="closingStatus === 'pending'">Valider</button>
                    </div>
                </header>

                <section class="alert-body">
                    <div v-if="closingAlertStatus === 'step1'">
                        <p>Avant de fermer définitivement le dispositif, assurez-vous que les indicateurs de suivi renseignés par l'opérateur sont à jour.<span v-if="plan.last_update !== null"> Pour information, la dernière mise à jour des indicateurs a eu lieu le {{ formatDate(plan.last_update / 1000, 'd/m/y') }}.</span><br/>Merci de renseigner les dépenses exécutées de l'année en cours et des années précédentes si nécessaire</p>

                        <PlanFunding inputMode="closing" v-model="closingData.finances" :minYear="minYear"></PlanFunding>
                    </div>

                    <div v-else>
                        <p><Input id="closedAt" :mandatory="true" type="date" label="Date de fermeture du dispositif" description="La date de fermeture du dispositif doit être postérieure - ou égale - à la dernière date de mise à jour des indicateurs." v-model="closingData.closedAt" :disabled="closingStatus === 'pending'" /></p>
                        <p><Input id="comment" :mandatory="true" type="textarea" label="Commentaire" :description="closingCommentDescription" v-model="closingData.comment" :disabled="closingStatus === 'pending'" /></p>
                    </div>

                    <div class="notification error" v-if="closingErrors.length > 0">Une erreur est survenue</div>
                    <p class="error" v-if="closingErrors.length > 0">
                        <ul>
                            <li v-for="error in closingErrors">{{ error }}</li>
                        </ul>
                    </p>
                </section>
            </div>
        </div>

        <section class="section-white">
            <div class="container" v-if="status !== 'loaded'">
                <div v-if="!status || status === 'loading'">
                    <!-- LOADING STATE -->
                    <div class="notification full-width">
                        <img src="/img/spinner_dark.svg" width="20" class="spinner" />
                        <span>Chargement des données en cours...</span>
                    </div>
                </div>

                <div v-else-if="status === 'loadingError'">
                    <!-- ERROR STATE -->
                    <div class="notification error full-width">
                        <span>{{ error }}. <span @click="load">Réessayer ?</span></span>
                    </div>
                </div>
            </div>

            <div v-if="status === 'loaded'">
                <header class="pageHeader">
                    <div class="pageHeader-wrapper">
                        <section class="pageHeader-main">
                            <section class="pageHeader-info">
                                <h1 class="pageHeader-title">{{ plan.name }}</h1>
                            </section>

                            <aside class="pageHeader-buttons">
                                <router-link v-if="plan && plan.canUpdate" class="button" :to="`/modifier-dispositif/${plan.id}`">
                                    <font-awesome-icon icon="pencil-alt"></font-awesome-icon>
                                    <span>Mettre à jour</span>
                                </router-link>
                                <router-link v-if="plan && plan.canUpdateMarks" class="button" :to="`/dispositif/${plan.id}/indicateurs`">
                                    <font-awesome-icon icon="pencil-alt"></font-awesome-icon>
                                    <span>Indicateurs</span>
                                </router-link>
                                <a v-if="plan && plan.closed_at === null && plan.canClose" class="button" @click="setClosingAlertStatus('step1')">
                                    <span>Fermer le dispositif</span>
                                </a>
                            </aside>
                        </section>
                    </div>
                </header>

                <section class="container">
                    <SlideNote title="Qu'est-ce qu'un dispositif ?">
                        <template slot="content">
                            <p>C’est une action mise en place et financée en partie ou en totalité par un acteur public. Sa finalité est la résorption des bidonvilles.<br/><strong>Qui doit le déclarer ?</strong> Le service de l'Etat à l'initiative du dispositif doit le déclarer. L'acteur de terrain sera en charge de renseigner les informations relatives à l'action menée.</p>

                            <p><strong>À quoi sert le suivi ?</strong><br/>La mise à jour des données de suivi permettent d’observer la progression des démarches des habitants par rapport à une situation initiale et les résultats des actions.<br/>Toutes ces données peuvent êtres utilisées pour la communication auprès des partenaires.</p>
                        </template>
                    </SlideNote>

                    <section class="dataSection">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="list"></font-awesome-icon></span> Intervention
                            </h1>
                        </header>

                        <article class="block">
                            <div class="dataSection-line">
                                <p class="data"><span class="data-label">Date de début</span><br/>{{ formatDate(plan.started_at / 1000, 'd M y') }}</p>
                                <p v-if="plan.expected_to_end_at" class="data"><span class="data-label">Date de fin prévue</span><br/>{{ formatDate(plan.expected_to_end_at / 1000, 'd M y') }}<br/><strong>Durée prévue : {{ dateDiff(plan.started_at, plan.expected_to_end_at) }}</strong></p>
                                <p v-if="plan.closed_at" class="data"><span class="data-label">Date de fin</span><br/>{{ formatDate(plan.closed_at / 1000, 'd M y') }}<br/><strong>Durée : {{ dateDiff(plan.started_at, plan.closed_at) }}</strong></p>
                            </div>

                            <p class="data-label">Champs d'intervention</p>
                            <p v-for="topic in plan.topics"><span class="rbTag rbTag--warning">{{ topic.name }}</span><br/></p>

                            <div class="dataSection-line">
                                <p class="data">
                                    <span class="data-label">Objectifs</span><br/>
                                    <span v-html="escapeHtml(plan.goals).replace(/\n/g, '<br/>')"></span>
                                </p>
                            </div>

                            <div class="dataSection-line" v-if="plan.final_comment">
                                <p class="data">
                                    <span class="data-label">Commentaire</span><br/>
                                    <span v-html="escapeHtml(plan.final_comment).replace(/\n/g, '<br/>')"></span>
                                </p>
                            </div>
                        </article>
                    </section>

                    <section class="dataSection">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="map-pin"></font-awesome-icon></span> Lieu
                            </h1>
                        </header>

                        <article class="block">
                            <div class="dataSection-line">
                                <p>
                                    <span class="data-label">{{ plan.location_type.label }}</span><br/>
                                    <span v-if="plan.location_type.id === 'shantytowns'">
                                        <p v-for="shantytown in plan.shantytowns">
                                            <router-link :to="`/site/${shantytown.id}`" class="locationPoint">{{ shantytown.usename }}</router-link>
                                        </p>
                                    </span>
                                    <span v-if="plan.location_type.id === 'location'" class="locationPoint">{{ plan.location.label }}</span>
                                    <span v-if="plan.location_type.id === 'other'">{{ plan.location_details }}</span>
                                </p>
                            </div>
                            <Map v-if="plan.location_type.id === 'location'" :display-searchbar="false" :towns="[ address ]" :default-view="center"></Map>
                        </article>
                    </section>

                    <section class="dataSection">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="address-book"></font-awesome-icon></span> Contacts
                            </h1>
                        </header>

                        <article class="block">
                            <div class="dataSection-line">
                                <p class="data"><span class="data-label">Pilote</span><br/><router-link :to="`/annuaire/${plan.government_contacts[0].organization.id}`" class="user">{{ plan.government_contacts[0].first_name }} {{ plan.government_contacts[0].last_name.toUpperCase() }}<br/>{{ plan.government_contacts[0].organization.name }}</router-link></p>
                            </div>
                            <div class="dataSection-line">
                                <p class="data"><span class="data-label">Opérateur ou service en charge</span><br/><router-link :to="`/annuaire/${plan.operator_contacts[0].organization.id}`" class="user">{{ plan.operator_contacts[0].first_name }} {{ plan.operator_contacts[0].last_name.toUpperCase() }}<br/>{{ plan.operator_contacts[0].organization.name }}</router-link></p>
                            </div>
                        </article>
                    </section>

                    <section class="dataSection rb-table" v-if="plan && plan.finances && plan.finances.length > 0">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="euro-sign"></font-awesome-icon></span> Financements
                            </h1>
                        </header>

                        <header class="planFunding-header">
                            <font-awesome-icon icon="caret-square-left" @click="showPreviousYear" class="planFunding-yearSwitch" v-bind:class="{ 'planFunding-yearSwitch--disabled': reachedMinFinanceIndex === true }"></font-awesome-icon>
                            <span>{{ plan.finances[currentFinanceIndex].year }} </span>
                            <font-awesome-icon icon="caret-square-right" @click="showNextYear" class="planFunding-yearSwitch" v-bind:class="{ 'planFunding-yearSwitch--disabled': reachedMaxFinanceIndex === true }"></font-awesome-icon>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col">Type de financements</th>
                                    <th class="table-col">Montants<br/>prévus</th>
                                    <th class="table-col">Précision</th>
                                    <th class="table-col">Dépenses<br/>exécutées</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr v-for="finance in plan.finances[currentFinanceIndex].data">
                                    <td>{{ finance.type.name }}</td>
                                    <td>{{ finance.amount }} €<br/>soit {{ Math.round((finance.amount / financeTotal()) * 100) }}%</td>
                                    <td>{{ finance.details }}</td>
                                    <td v-if="finance.realAmount">{{ finance.realAmount }} €</td>
                                    <td v-else-if="reachedMaxFinanceIndex">À remplir entre janvier et mars</td>
                                    <td v-else>Non renseignées</td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td colspan="3"><strong>TOTAL : {{ financeTotal() }}€</strong></td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="users"></font-awesome-icon></span> Équipe
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr v-for="etpType in availableEtpTypes">
                                    <th>{{ etpType.name }}</th>
                                    <td v-for="state in plan.states">{{ (state.etp.find(({ type: { uid } }) => uid === etpType.uid) || { total: 0 }).total }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="audience">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="arrow-right"></font-awesome-icon></span> Public
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col">Ménages</th>
                                    <th class="table-col">Personnes</th>
                                    <th class="table-col">dont femmes</th>
                                    <th class="table-col">dont mineurs</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <td><strong>Entrées</strong> dans le dispositif</td>
                                    <td>{{ audience.in.families }}</td>
                                    <td>{{ audience.in.total }}</td>
                                    <td>{{ audience.in.women }}</td>
                                    <td>{{ audience.in.minors }}</td>
                                </tr>
                                <tr>
                                    <td><strong>Sorties positivement</strong><br/>fin accompagnement social et/ou<br/>prise en charge dans un autre dispositif</td>
                                    <td>{{ audience.out_positive.families }}</td>
                                    <td>{{ audience.out_positive.total }}</td>
                                    <td>{{ audience.out_positive.women }}</td>
                                    <td>{{ audience.out_positive.minors }}</td>
                                </tr>
                                <tr>
                                    <td><strong>Exclusion</strong> du dispositif</td>
                                    <td>{{ audience.out_excluded.families }}</td>
                                    <td>{{ audience.out_excluded.total }}</td>
                                    <td>{{ audience.out_excluded.women }}</td>
                                    <td>{{ audience.out_excluded.minors }}</td>
                                </tr>
                                <tr>
                                    <td><strong>Abandon / départ volontaire</strong></td>
                                    <td>{{ audience.out_abandoned.families }}</td>
                                    <td>{{ audience.out_abandoned.total }}</td>
                                    <td>{{ audience.out_abandoned.women }}</td>
                                    <td>{{ audience.out_abandoned.minors }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="id-card"></font-awesome-icon></span> Droit commun et ressources
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col">Nombre de personnes ayant</th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <td>une domiciliation</td>
                                    <td v-for="state in plan.states">{{ state.droit_commun.domiciliation === null ? 'NC' : state.droit_commun.domiciliation }}</td>
                                </tr>
                                <tr>
                                    <td>des droits CAF ouverts</td>
                                    <td v-for="state in plan.states">{{ state.droit_commun.droits_caf === null ? 'NC' : state.droit_commun.droits_caf }}</td>
                                </tr>
                                <tr>
                                    <td>un emploi stable / ressources suffisantes</td>
                                    <td v-for="state in plan.states">{{ state.droit_commun.emploi_stable === null ? 'NC' : state.droit_commun.emploi_stable }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0 && plan.topics.find(({ uid }) => uid === 'health')">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="user-md"></font-awesome-icon></span> Santé
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <th :colspan="plan.states.length + 1"><strong>Nombre de personnes avec...</strong></th>
                                </tr>
                                <tr>
                                    <td>une couverture AME valide</td>
                                    <td v-for="state in plan.states">{{ state.sante.ame_valide === null ? 'NC' : state.sante.ame_valide }}</td>
                                </tr>
                                <tr>
                                    <td>une couverture PUMA valide</td>
                                    <td v-for="state in plan.states">{{ state.sante.puma_valide === null ? 'NC' : state.sante.puma_valide }}</td>
                                </tr>
                                <tr>
                                    <td>une demande AME en cours</td>
                                    <td v-for="state in plan.states">{{ state.sante.ame_en_cours === null ? 'NC' : state.sante.ame_en_cours }}</td>
                                </tr>
                                <tr>
                                    <td>une demande PUMA en cours</td>
                                    <td v-for="state in plan.states">{{ state.sante.puma_en_cours === null ? 'NC' : state.sante.puma_en_cours }}</td>
                                </tr>
                                <tr>
                                    <th :colspan="plan.states.length + 1"><strong>Nombre de personnes ayant fait l'objet d'au moins...</strong></th>
                                </tr>
                                <tr>
                                    <td>une orientation vers une structure de santé</td>
                                    <td v-for="state in plan.states">{{ state.sante.orientation === null ? 'NC' : state.sante.orientation }}</td>
                                </tr>
                                <tr>
                                    <td>un accompagnement physique vers une structure de santé</td>
                                    <td v-for="state in plan.states">{{ state.sante.accompagnement === null ? 'NC' : state.sante.accompagnement }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0 && plan.topics.find(({ uid }) => uid === 'school')">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="user-md"></font-awesome-icon></span> Éducation et scolarisation
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <td>Mineurs en âge d'être scolarisé ou suivant une formation</td>
                                    <td v-for="state in plan.states">{{ state.education.scolarisables === null ? 'NC' : state.education.scolarisables }}</td>
                                </tr>
                                <tr>
                                    <td>Mineurs bénéficiant d'une action de médiation (3 - 18 ans)</td>
                                    <td v-for="state in plan.states">{{ state.education.en_mediation === null ? 'NC' : state.education.en_mediation }}</td>
                                </tr>
                                <tr>
                                    <td>Scolarisés en maternelle</td>
                                    <td v-for="state in plan.states">{{ state.education.maternelles === null ? 'NC' : state.education.maternelles }}</td>
                                </tr>
                                <tr>
                                    <td>Scolarisés en primaire</td>
                                    <td v-for="state in plan.states">{{ state.education.elementaires === null ? 'NC' : state.education.elementaires }}</td>
                                </tr>
                                <tr>
                                    <td>Scolarisés en collège</td>
                                    <td v-for="state in plan.states">{{ state.education.colleges === null ? 'NC' : state.education.colleges }}</td>
                                </tr>
                                <tr>
                                    <td>Scolarisés au Lycée - formation professionnelle</td>
                                    <td v-for="state in plan.states">{{ state.education.lycees === null ? 'NC' : state.education.lycees }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0 && plan.topics.find(({ uid }) => uid === 'work')">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="briefcase"></font-awesome-icon></span> Formation et emploi
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <th :colspan="plan.states.length + 1"><strong>Nombre de personnes inscrites ou suivies par...</strong></th>
                                </tr>
                                <tr>
                                    <td>Pôle emploi</td>
                                    <td v-for="state in plan.states">{{ state.formation.pole_emploi === null ? 'NC' : state.formation.pole_emploi }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.pole_emploi_femmes === null ? 'NC' : state.formation.pole_emploi_femmes }}</td>
                                </tr>
                                <tr>
                                    <td>Mission locale</td>
                                    <td v-for="state in plan.states">{{ state.formation.mission_locale === null ? 'NC' : state.formation.mission_locale }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.mission_locale_femmes === null ? 'NC' : state.formation.mission_locale_femmes }}</td>
                                </tr>
                                <tr>
                                    <th :colspan="plan.states.length + 1"><strong>Nombre de personnes ayant</strong></th>
                                </tr>
                                <tr>
                                    <td>Un contrat</td>
                                    <td v-for="state in plan.states">{{ state.formation.contrats === null ? 'NC' : state.formation.contrats }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.contrats_femmes === null ? 'NC' : state.formation.contrats_femmes }}</td>
                                </tr>
                                <tr>
                                    <td>Une formation</td>
                                    <td v-for="state in plan.states">{{ state.formation.formations === null ? 'NC' : state.formation.formations }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.formations_femmes === null ? 'NC' : state.formation.formations_femmes }}</td>
                                </tr>
                                <tr>
                                    <td>Un statut autoentrepreneur</td>
                                    <td v-for="state in plan.states">{{ state.formation.autoentrepreneurs === null ? 'NC' : state.formation.autoentrepreneurs }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.autoentrepreneurs_femmes === null ? 'NC' : state.formation.autoentrepreneurs_femmes }}</td>
                                </tr>
                                <tr>
                                    <td>l'ARE</td>
                                    <td v-for="state in plan.states">{{ state.formation.are === null ? 'NC' : state.formation.are }}</td>
                                </tr>
                                <tr>
                                    <td><em>(dont femmes)</em></td>
                                    <td v-for="state in plan.states">{{ state.formation.are_femmes === null ? 'NC' : state.formation.are_femmes }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0 && plan.topics.find(({ uid }) => uid === 'housing')">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="home"></font-awesome-icon></span> Logement
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <template v-for="field in housingFields">
                                    <tr>
                                        <th :colspan="plan.states.length + 1"><strong>{{ field.label }}</strong></th>
                                    </tr>
                                    <tr>
                                        <td>Nombre de personnes</td>
                                        <td v-for="state in plan.states">{{ state.logement[field.name].people === null ? 'NC' : state.logement[field.name].people }}</td>
                                    </tr>
                                    <tr>
                                        <td>Nombre de ménages</td>
                                        <td v-for="state in plan.states">{{ state.logement[field.name].families === null ? 'NC' : state.logement[field.name].families }}</td>
                                    </tr>
                                </template>
                            </tbody>
                        </table>
                    </section>

                    <section class="dataSection rb-table" v-if="plan.states.length > 0 && plan.topics.find(({ uid }) => uid === 'safety')">
                        <header class="dataSection-header">
                            <h1 class="dataSection-title">
                                <span class="dataSection-icon"><font-awesome-icon icon="seedling"></font-awesome-icon></span> Stabilisation et sécurisation du site
                            </h1>
                        </header>

                        <table class="table block">
                            <thead>
                                <tr>
                                    <th class="table-col"></th>
                                    <th class="table-col" v-for="state in plan.states">{{ formatDate(new Date(state.date).getTime() / 1000, 'd B y') }}</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <td>Nombre d'accès réguliers à l'eau potable</td>
                                    <td v-for="state in plan.states">{{ state.securisation.points_eau === null ? 'NC' : state.securisation.points_eau }}</td>
                                </tr>
                                <tr>
                                    <td>Nombre de sanitaires</td>
                                    <td v-for="state in plan.states">{{ state.securisation.wc === null ? 'NC' : state.securisation.wc }}</td>
                                </tr>
                                <tr>
                                    <td>Nombre d'accès réguliers à l'électricité</td>
                                    <td v-for="state in plan.states">{{ state.securisation.electricite === null ? 'NC' : state.securisation.electricite }}</td>
                                </tr>
                                <tr>
                                    <td>Nombre de bennes disponibles pour le ramassage des déchets du site</td>
                                    <td v-for="state in plan.states">{{ state.securisation.nombre_bennes === null ? 'NC' : state.securisation.nombre_bennes }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </section>

                    <div class="note" v-if="plan.states.length === 0 && plan.canUpdateMarks">
                        <div class="note-body">
                            <p>
                                <strong>Aucun indicateur de suivi renseigné par l'opérateur</strong><br/>
                                <router-link :to="`/dispositif/${plan.id}/indicateurs`" class="button">
                                    <font-awesome-icon icon="pencil-alt"></font-awesome-icon>
                                    <span>Modifier</span>
                                </router-link>
                            </p>
                        </div>
                    </div>
                </section>
            </div>
        </section>
    </div>
</div>
