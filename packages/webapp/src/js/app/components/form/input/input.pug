<div class="form__group inputContainer" v-bind:class="{ error: errors.length > 0 }" :id="id">
    <label class="input-label">{{ label }}<sup v-if="mandatory" class="input-mandatory"> (*)</sup></label>
    <p v-if="alertMessage" class="notification warning">{{ alertMessage }}</p>

    <div v-else>
        <p v-if="description" class="input-description" v-html="description"></p>

        <div class="notification error" v-if="errors.length > 0">
            <ul v-for="error in errors">
                <li>{{ error }}</li>
            </ul>
        </div>

        //- text input
        <input v-if="type === 'text'" :data-cy-field="id" type="text" class="input input--text" :id="`input-${id}`" v-bind="props" v-model="data" :disabled="disabled" :readonly="disabled" />

        //- hidden input
        <input v-if="type === 'hidden'" :data-cy-field="id" type="hidden" class="input input--hidden" :id="`input-${id}`" v-bind="props" v-model="data" :disabled="disabled" :readonly="disabled" />

        //- password input
        <input v-if="type === 'password'" :data-cy-field="id" :type="showPassword ? 'text' : 'password'" class="input input--password" :id="`input-${id}`" v-bind="props" v-model="data" :disabled="disabled" :readonly="disabled" />
        <span v-if="type === 'password'" @click="showPassword = !showPassword" class="input--password-toggler"><font-awesome-icon :icon="showPassword ? 'eye' : 'eye-slash'"></font-awesome-icon></span>

        //- textarea input
        <textarea v-if="type === 'textarea'" :data-cy-field="id" class="input input--textarea" :id="`input-${id}`" v-bind="props" v-model="data" :disabled="disabled" :readonly="disabled"></textarea>

        //- number input
        <input v-if="type === 'number'" :data-cy-field="id" type="number" class="input input--number" :id="`input-${id}`" v-bind="props" v-model="data" :disabled="disabled" :readonly="disabled" />

        //- select
        <select v-if="type === 'select' || type === 'selectMultiple'" :data-cy-field="id" class="input input--select" :id="`input-${id}`" v-bind="props" v-model="data" :multiple="type === 'selectMultiple'" :disabled="disabled">
            <optgroup v-if="optionsAreGrouped" v-for="groupName in Object.keys(options)" :label="options[groupName].label">
                <option v-for="option in options[groupName].options" :value="option.value">{{ option.label }}</option>
            </optgroup>
            <option v-if="!optionsAreGrouped" v-for="option in options" :value="option.value">{{ option.label }}</option>
        </select>

        //- radio
        <ul v-if="type === 'radio'" :id="`input-${id}`" class="input input--radio">
            <li v-for="(option, index) in options" class="input--radio-option">
                <label :for="`input${_uid}-${index}`">
                    <input type="radio" :data-cy-field="id" :data-cy-label="option.label" :id="`input${_uid}-${index}`" :value="option.value" :name="`input${_uid}`" v-model="data" :disabled="disabled" class="input input--radio" /> {{ option.label }}
                </label>
            </li>
        </ul>

        //- checkbox
        <ul v-if="type === 'checkbox'" class="input--checkbox" :id="`input-${id}`">
            <li v-for="(option, index) in options" class="input--checkbox-option">
                <label :for="`input${_uid}-${index}`">
                    <input type="checkbox" :data-cy-field="id" :data-cy-label="option.label" :id="`input${_uid}-${index}`" :value="option.value" :name="`input${_uid}`" v-model="data" :disabled="disabled" class="input input--checkbox" /> {{ option.label }}
                </label>
            </li>
        </ul>

        //- date input
        <Datepicker v-if="type === 'date'" :data-cy-field="id" input-class="input input--date" v-bind="props" v-model="data" :disabled="disabled"></Datepicker>

        //- autocompleter input
        <Autocompleter v-if="type === 'autocompleter'" v-bind="props" v-model="data" :disabled="disabled"></Autocompleter>

        //- address
        <Address v-if="type === 'address'" v-bind="props" v-model="data" :disabled="disabled"></Address>

        //- location
        <Location v-if="type === 'location'" v-bind="props" v-model="data" :disabled="disabled"></Location>

        //- address with location
        <AddressWithLocation v-if="type === 'addressWithLocation'" :data-cy-field="id" v-bind="props" v-model="data" :disabled="disabled"></AddressWithLocation>

        //- plan funding
        <PlanFunding v-if="type === 'planFunding'" v-bind="props" v-model="data" :disabled="disabled"></PlanFunding>

        //- collectivity autocompleter
        <Collectivity v-if="type === 'collectivity'" v-bind="props" v-model="data" :disabled="disabled"></Collectivity>

        //- organization autocompleter
        <Organization v-if="type === 'organization'" v-bind="props" v-model="data" :disabled="disabled"></Organization>

        //- etp
        <Etp v-if="type === 'etp'" v-bind="props" v-model="data" :disabled="disabled"></Etp>

        //- audience
        <Audience v-if="type === 'audience'" v-bind="props" v-model="data" :disabled="disabled"></Audience>

        //- planHousing
        <PlanHousing v-if="type === 'planHousing'" v-bind="props" v-model="data" :disabled="disabled"></PlanHousing>
    </div>
</div>